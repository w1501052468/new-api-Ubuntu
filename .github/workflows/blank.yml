name: Build new-api-1

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: 'Calcium-Ion/new-api'
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0 # 可选，如果需要可以获取全部历史
    - name: Set up Node and Go environments
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq wget curl git gcc bash gawk sed
        wget https://dl.google.com/go/go1.22.0.linux-amd64.tar.gz
        sudo tar -C /usr/local -xzf go1.22.0.linux-amd64.tar.gz
        rm go1.22.0.linux-amd64.tar.gz
        sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
    - name: Build new-api
      run: |
        export LATEST_APP=$(wget -qO- https://api.github.com/repos/Calcium-Ion/new-api/tags | gawk -F '["v]' '/name/{print "v"$5;exit}')
        if [ -z "$LATEST_APP" ]; then
          echo "No tags found, exiting..."
          exit 1
        fi
        git clone -b $LATEST_APP https://github.com/Calcium-Ion/new-api
        cd new-api/web
        cp package.json package.json.bak
        jq '.resolutions = {"rollup": "npm:@rollup/wasm-node"} | .overrides = {"rollup": "npm:@rollup/wasm-node"}' package.json.bak > package.json
        npm install
        git describe --tags > VERSION
        DISABLE_ESLINT_PLUGIN='true' VITE_REACT_APP_VERSION=$(cat VERSION) npm run build
        cd ..
        go mod download
        go build -ldflags "-s -w -X 'one-api/common.Version=$(git describe --tags)' -extldflags '-static'" -o new-api

    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: new-api-ubuntu
        path: new-api/new-api
    - name: Generate release tag
      id: tag
      run: echo "release_tag=$(wget -qO- https://api.github.com/repos/Calcium-Ion/new-api/tags | gawk -F '["v]' '/name/{print "v"\$5;exit}')" >> $GITHUB_OUTPUT
    - name: Create release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: new-api/new-api
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 8
